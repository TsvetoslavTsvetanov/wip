name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK and Maven
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Compile
        run: mvn compile

  test:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK and Maven
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Set up Docker
        uses: actions/setup-docker@v2

      - name: Start Docker daemon
        run: docker info

      - name: Build and run tests
        run: mvn test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK and Maven
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build JAR
        run: mvn clean install -DskipTests
        artifacts:
          paths:
            - target/*.jar

  build_docker_image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: actions/setup-docker@v2

      - name: Login to Docker registry
        run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }} ${{ secrets.CI_REGISTRY }}

      - name: Build Docker image
        run: docker build --pull -t "$CI_REGISTRY_IMAGE:world-in-picture" .

      - name: Push Docker image
        run: docker push "$CI_REGISTRY_IMAGE:world-in-picture"

  deploy:
    runs-on: ubuntu-latest
    needs: build_docker_image
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: actions/setup-docker@v2

      - name: Login to Docker registry
        run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }} ${{ secrets.CI_REGISTRY }}

      - name: Deploy application
        run: docker run -d -p 8080:80 "$CI_REGISTRY_IMAGE:world-in-pictures"
