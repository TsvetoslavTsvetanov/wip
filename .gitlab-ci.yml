stages:
    - compile
    - test
    - build
    - build_image
    - deploy 

compile:
  stage: compile
  image: maven:3.8.4-openjdk-11
  tags:
    - docker
  before_script:
    - echo "Starting compile phase"
  script:
    - "mvn compile"

test:
  stage: test
  needs:
    - job: compile
  image: "maven:3.8.4-openjdk-11"
  services:
    - docker:dind
  tags:
    - docker
  script:
    - "mvn test"

build:
  stage: build
  image:  maven:3.8.4-openjdk-11
  tags:
    - docker
  script:
    - "mvn clean install -DskipTests"
  artifacts:
    paths:
      - target/*.jar

build_docker_image:
  stage: build_image
  image: docker:20
  services:
    - docker:dind
  before_script:
    - echo "Starting build image"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:world-in-picture" .
  after_script:
    - docker push "$CI_REGISTRY_IMAGE:world-in-picture"

deploy:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  image: docker:20
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Deploying application..."
    - docker run -d -p 8080:80 "$CI_REGISTRY_IMAGE:world-in-pictures"

    